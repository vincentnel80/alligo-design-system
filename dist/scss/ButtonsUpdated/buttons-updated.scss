// Import Fonts
// Import Colors
// Import spacings ??

//@import 'mixins/fonts';
//@import '../FontsTypography/foundation-fonts-weights.scss';

//@import "system-colors";

@import '../Colors/colors.scss';

//// this is for rem calc ... how to use?
/// maybe make new page???
$font-base: 16px;

@function rem-calc($pixel) {
    $rem: $pixel / $font-base;

    @return #{$rem}rem;
}
/// I guess I need a class for paddings etc etc---- mixins.....
/////

.buttons-container {

    /// contains corresponding width
    $button-sizes: (
        xs: 18px,
        small: 24px,
        medium: 32px,
        large: 40px
    );

    $button-colors: (
        primary: #007bff,
        secondary: #6c757d,
        success: #28a745,
        danger: #dc3545,
        warning: #ffc107
    );

    @mixin button($size, $color) {
        $button-width: map-get($button-sizes, $size);
        $button-background: map-get($button-colors, $color);
        $button-hover-background: darken($button-background, 10%);

        display: inline-block;
        padding: 0 12px;
        height: $button-width;
        line-height: $button-width;
        border-radius: $button-width / 2;
        background-color: $button-background;
        color: #fff;
        text-align: center;
        text-decoration: none;
        cursor: pointer;
        transition: background-color 0.3s;

        &:hover {
            background-color: $button-hover-background;
        }
    }

    // Usage example:
    .button-large {
        @include button(xs, primary);
    }

    .button-xs {
        @include button(medium, warning);
    }


    /// sass experiement

    // desktop (and I guess large) - need to make for mobile
    // desktopp size largest
 .button-base {
     height: 48px;
     padding: 15px 20px; //--- px or rem
     cursor: pointer;
     border: 1px solid transparent; // used to ovverde system default
     transition: all 150ms ease-out;

     .button-text {
         font-size: 18px;
         line-height: 1;
         letter-spacing: 0.18px;
         text-align: center;
     }
 }
    // mobile button base

    .variant-base-large {
        /// should I import the primary button above?? into this one
        padding: 16px 15px; //--- px or rem
        height: 56px;
        display: flex;
        align-items: center;
        border: 1px solid transparent;
        cursor: pointer;
        transition: all 150ms ease-out;

        .material-symbols-outlined {
            color: $white;
        }

        .button-text {
            line-height: 1;
            letter-spacing: 0.18px;
            text-align: center;
            padding-left: 8px;
            padding-right: 8px;
            color: $white;
        }
        // keep it here or add it to each one --- what are repurcussions?? which one will overwrite the other???
        &:hover {
            background: $grey-80;
        }
    }

    //// Primary Default -- base button ??
    // use base in conjunction
    .primary {
        background: $black;

        .button-text {
            color: $white;
        }

        &:hover {
            background: $grey-80;
            color: rgba($white, .8);
        }
        /// End base
    } // end base

    .primary-medium {
        background: $black;
        padding: 12px;

        .button-text {
            text-align: center;
            /* Desktop/Label Large */
            font-size: 18px;
            font-style: normal;
            font-weight: 700;
            line-height: 18px;
            letter-spacing: 0.18px;
            text-transform: uppercase;
            color: $white;
        }

        &:hover {
            background: $grey-80;
            color: rgba($white, .8);
        }
        /// End base
    } // end base


    // Desktop Primary Inverted
    .primary-inverted {
        background: $white;

        .button-text {
            color: $black;
        }

        &:hover {
            background: $grey-05;
        }
        /// End base
    } // end base
    // End Desktop Primary Inverted

// Desktop Secondary Default
    .secondary {
        background: $white;
        border: 1px solid $black;

        .button-text {
            color: $black;
            /// comment --- font defaults not being hit (and not overriding system defaults
        }

        &:hover {
            background: rgba(0, 0, 0, 0.05);
        }
    // End Desktop Secondary Default
    }

    /// Secondary Inverted :
    .secondary-inverted {
        background: transparent;
        border: 1px solid $white;

        .button-text {
            color: $white;
            /// comment --- font defaults not being hit (and not overriding system defaults
        }

        &:hover {
            background: rgba(255, 255, 255, 0.15);
        }
        // End Desktop Secondary Default
    }
    /// End Secondary Inverted : ToDo

    // Blank-Default
    .blank {

        background: transparent; // to override system style

        .button-text {
            color: $black;
            /// comment --- font defaults not being hit (and not overriding system defaults
        }

        &:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }
    }
    // End blank Default

    /// Blank Inverted
    .blank-inverted {
        background: transparent; // to override system style
        .button-text {
            color: $white;
            /// comment --- font defaults not being hit (and not overriding system defaults
        }

        &:hover {
            background-color: rgba(255, 255, 255, 0.15);
        }
        // End Desktop Secondary Default
    }
    /// End blank inverted


    /// SECTION 2 Variants

    //1.) // issue not sure if I need the onhover state stuff
    /// keep this as gold standard .... an can be used for system ... but ... try the base
   /* .variant-primary-large {
        padding: 16px 15px; //--- px or rem
        height: 56px;
        display: flex;
        align-items: center;
        background: $black;
        //background-color: rgba( $black, .1 );

        border: 1px solid transparent;
        cursor: pointer;
        transition: all 150ms ease-out;

        .material-icons {
            color: $white;
        }

        .button-text {
            font-family: 'BreuerCondensedBold';
            font-size: 18px;
            font-weight: bold;
            font-stretch: condensed;
            font-style: normal;
            line-height: 1;
            letter-spacing: 0.18px;
            text-align: center;
            //color: var(--text-text-highest-emphasis); /// check correct to use here
            color: $white;
            padding-left: 8px;
            padding-right: 8px;
        }

        &:hover {
            background: $grey-80;
        }
        /// not using active - what does active do - I forgot
        // &:active {
             transform: scale(0.98);

             box-shadow: 3px 2px 22px 1px rgba(0, 0, 0, 0.24);

         }
        // looses focus on click
        &:focus {
            background: rgba(0, 0, 0, 0.1);
            border: 1px solid rgba(0, 0, 0, 0.1);
            color: $black;

            .button-text {
                color: $black;
            }

            .material-icons {
                color: $black;
            }

            &:hover {
                // background: rgba(0, 0, 0, 0.14);
                background: rgba(0, 0, 0, 0.1);
                border: 1px solid $black;
                color: $black;

                .button-text {
                    color: $black;
                }
            }
        }

    } */

    .variant-primary-large {
        background: $black;

        .material-symbols-outlined {
            color: $white;
        }
    }

    // varient Primary Inverted
    .variant-primary-inverted-large {
        background: $white;

        .material-symbols-outlined {
            color: $black;
        }

        .button-text {
            color: $black;
        }

        &:hover {
            background: $grey-05;
        }
    }

    // varient Secondary Large
    .variant-secondary-large {
        background: $white;
        border: 1px solid $black;

        .material-symbols-outlined {
            color: $black;
        }

        .button-text {
            color: $black;
        }

        &:hover {
            background: rgba(0, 0, 0, 0.05);
        }
    }

    // varient Secondary inverted Large
    .variant-secondary-inverted-large {
        background: transparent;
        border: 1px solid $white;

        .material-symbols-outlined {
            color: $white;
        }

        .button-text {
            color: $white;
        }

        &:hover {
            background: rgba(255, 255, 255, 0.15);
        }
    }

    // varient Secondary Large
    .variant-blank-large {
        background: transparent; // to override system style

        .material-symbols-outlined {
            color: $black;
        }

        .button-text {
            color: $black;
        }

        &:hover {
            background: rgba(0, 0, 0, 0.05);
        }
    }

    // varient Secondary Large
    .variant-blank-inverted-large {
        background: transparent; // to override system style

        .material-symbols-outlined {
            color: $white;
        }

        .button-text {
            color: $white;
        }

        &:hover {
            background-color: rgba(255, 255, 255, 0.15);
        }
    }

    /////END SYSTEM 2 VARIANTS


    /////
    /////
    ////
    /// SYSTEM
    ////
    ////
    ////



    // System large, Desktop Large (just default
    .button-sys-desktop-large {
        padding: 16px; //--- px or rem
        height: 56px;
        align-self: stretch;
        flex-grow: 0;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        background: $white; // not correct - needs blend
        border: 1px solid rgba(0, 0, 0, 0.1); // color var + percentage
        cursor: pointer;


        .Text {
            font-family: 'BreuerCondensedBold';
            font-size: 18px;
            font-weight: bold;
            font-stretch: condensed;
            font-style: normal;
            line-height: 1;
            letter-spacing: 0.18px;
            text-align: center;
            //color: var(--text-text-highest-emphasis); /// check correct to use here
            color: $black; /// black is not correct
            padding-left: 8px;
            padding-right: 8px;
            // ease in ease out 150 ms
        }

       /* &:active {
            background: green;
            border: 1px solid #000000;
        }*/

        &:hover {
            background: rgba(0, 0, 0, 0.1);
            border: 1px solid #000000;
        }

    }



    // System Toggled, Desktop Large
    .button-sys-toggled {
        padding: 12px; //--- px or rem
        //height: 56px;
       // align-self: stretch;
       // flex-grow: 0;
        display: flex;
       // flex-direction: row;
       // justify-content: center;
        align-items: center;
        background: rgba(0, 0, 0, 0.12);
        //background-color: rgba( $black, .1 );

        border: 1px solid rgba($black, .1);
        cursor: pointer;


        .Text {
            font-family: 'BreuerCondensedBold';
            font-size: 18px;
            font-weight: bold;
            font-stretch: condensed;
            font-style: normal;
            line-height: 1;
            letter-spacing: 0.18px;
            text-align: center;
            //color: var(--text-text-highest-emphasis); /// check correct to use here
            color: $black; /// black is not correct
            padding-left: 8px;
            padding-right: 8px;
        }

        &:hover {
            background: rgba(0, 0, 0, 0.14);
            /* Greyscale/Black */

            border: 1px solid $black;

        }

       /* &:active {
            transform: scale(0.98);

            box-shadow: 3px 2px 22px 1px rgba(0, 0, 0, 0.24);

        } */
        // looses focus on click
        &:focus {
            background: rgba(0, 0, 0, 0.12);
            border: 1px solid rgba(0, 0, 0, 0.1);
            border: 1px solid red;

            &:hover {
               // background: rgba(0, 0, 0, 0.14);
                background: green;
                border: 1px solid #000000;
            }
        }

    }

   /* .focus:focus {
        color: red;
    } */


     /// Button with circle left
    /// desktop Primary Small
    //// needs to draw from base --- at top




    .button-desktop-primary-small {
        padding: 7px; //--- px or rem
        min-width: 153px;
        height: 40px;
        //align-self: stretch;
        //flex-grow: 0;
        display: flex;
       // flex-direction: row;
        // justify-content: center;
        align-items: center;
        // padding: 16px;
        background: $black; //// top base does not have a color
        transition: all 150ms ease-out;
        cursor: pointer;

        //
        border: 1px solid rgba(0, 0, 0, 0.1);

        .material-symbols-outlined {
            /// base needs material icons size... its not set // variant or???
            color: $white;
            size: 24px;
        }
        .Ellipse-62 {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            margin-left: -8px;
            margin-top: -16px;
           // background-color: var(--alert-red-danger); /// use real color
            background-color: $red-00; // not correct fix to above
        }
        .Text {
            // width: 79px;
            // height: 18px;
            //  flex-grow: 0;
            font-family: 'BreuerCondensedBold';
            font-size: 16px;
            font-weight: bold;
            font-stretch: condensed;
            font-style: normal;
            line-height: 16px;
            letter-spacing: 0.48px;
            text-align: center;
            //color: var(--text-text-highest-emphasis); /// check correct to use here
            color: $white; /// black is not correct
            margin-left: 8px;
            margin-right: 8px;
        }

        &:hover {
            background: $grey-80;
            color: rgba($white, .8);
        }
    }

    /// Button with circle left
    /// desktop Primary XS
    //// needs to draw from base --- at top
    .button-desktop-primary-xs {
        padding: 5px; //--- px or rem
        min-width: 125px;
        height: 32px;
        align-self: stretch;
        flex-grow: 0;
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        // padding: 16px;

        //
        border: 1px solid transparent;
        // border: 1px solid rgba(0, 0, 0, 0.1);

        .material-icons {
            /// base needs material icons size... its not set
            color: $black;
            font-size: 20px;
        }
        .Ellipse-62 {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            margin-left: -9px;
            margin-top: -15px;
            // background-color: var(--alert-red-danger); /// use real color
            background-color: $red-00; // not correct fix to above
        }
        .Text {
            // width: 79px;
            // height: 18px;
            //  flex-grow: 0;
            font-family: 'BreuerCondensedBold';
            font-size: 14px;
            font-weight: bold;
            font-stretch: condensed;
            font-style: normal;
            line-height: 16px;
            letter-spacing: 0.56px;
            text-align: center;
            //color: var(--text-text-highest-emphasis); /// check correct to use here
            color: black; /// black is not correct
            margin-left: 4px;
            margin-right: 4px;
        }
    }

    //// end button circle left





    ///// End  with circle
    /// button icon right
    .button-icon-circle-right {
        padding: 6px;
        border: 1px solid transparent; // use either
        width: 32px;
        height: 32px;
        background: $black; // not correct
        position: relative;

        .elipse {
            width: 8px;
            height: 8px;
            border-radius: 50%;
            // background-color: var(--alert-red-danger); /// use real color
            background-color: $red-00; // not correct fix to above
            // is display needed
            display: block;
        }

        // do yo uneed to add in a shortcode?? so that different icons can appear
        .icon {
            background-image: url(../Icons/ComponentIcons/chevron_left.svg);
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
            width: 32px;
            height: 32px;
            display: block;
        }
    }
    /// in or out above
    .jsx-minicart-header-icon-count {
        background: $red-00;
        border-radius: 100px;
        left: 50%;
        letter-spacing: .2px;
        //line-height: .8125rem;
        //min-width: 1.5625rem;
        min-width: 8px;
        min-height: 8px;
        //padding: 4px 6px;
        position: absolute;
        text-align: center;
        //top: -50%; use this to position
    }
    .svg-header-icon-svg {
       // width: 11.58px;
       // height: 15.37px;
    }
    // color svg
    .svg-header-icon-svg-path {
        fill: $white; // correct var
    }
}

//// TO DO
// Correct text
// huge cleanup
// Rename classes
// MAybe look at examples


/// tech
/*
          font-size: rem-calc(16px);
          margin-right: rem-calc(4px);
          vertical-align: text-bottom;
 */
/// Helper

/// gradient checkerboard
.checkerboard {
    background-image: linear-gradient(45deg, #808080 25%, transparent 25%), linear-gradient(-45deg, #808080 25%, transparent 25%), linear-gradient(45deg, transparent 75%, #808080 75%), linear-gradient(-45deg, transparent 75%, #808080 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
}

// Just for background color change

// primary
/*.bg-white {
    color: black; // needed ? why here?
    background-color: var(--color-greyscale-white);
}*/
.bg-Primary {
    color: black; // needed ? why here?
    background-color: var(--color-greyscale-white);
}
// secondary
/*.middle {
    color: black; // why? its just bg
    background-color: var(--color-greyscale-grey-05);
}*/
.bg-Secondary {
    color: black; // why? its just bg
    background-color: var(--color-greyscale-grey-05);
}
// Dark
.bg-Dark {
    color: white; // why ??
    background-color: var(--color-greyscale-black);
}
