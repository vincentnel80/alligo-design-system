import React, { useEffect } from 'react';
import { BlockQuote } from './BlockQuote';
import CustomDocsContainer from './CustomDocsContainer';

// Dynamic HTML snippet generator function
const generateHtmlSnippet = (args) => {
  const { fontName = 'body-xl', summary, modifier = '', marginBottom = '' } = args;  // Default values
  
  // Conditionally add modifier and marginBottom if they have values
  const classes = [fontName];
  if (modifier) classes.push(modifier);
  if (marginBottom) classes.push(marginBottom);

  // Join the classes array into a string, filtering out any empty values
  return `<p class="${classes.join(' ')}">${summary}</p>`;
};

// Define available modifiers for each fontName
const fontModifiers = {
  'body-sm': ['', 'body-sm--italic', 'body-sm--underline', 'body-sm--strikethrough', 'body-sm--bold', 'body-sm-bold--italic', 'body-sm-bold--underline', 'body-sm-bold--strikethrough'],
  'body-md': ['', 'body-md--bold', 'body-md--italic', 'body-md--underline', 'body-md--strikethrough', 'body-md--bold-italic', 'body-md--bold-underline', 'body-md--bold-strikethrough'],
  'body-lg': ['', 'body-lg--bold', 'body-lg--italic', 'body-lg--underline', 'body-lg--strikethrough', 'body-lg--bold-italic', 'body-lg--bold-underline', 'body-lg--bold-strikethrough'],
  'body-xl': ['', 'body-xl--preamble', 'body-xl--bold', 'body-xl--italic', 'body-xl--underline', 'body-xl--strikethrough', 'body-xl--bold-italic', 'body-xl--bold-underline', 'body-xl--bold-strikethrough'],
  // Add other font names and their corresponding modifiers if needed
};

export default {
  title: 'Foundation/Typography/Components/BlockQuote',
  component: BlockQuote,
  parameters: {
    layout: 'centered',
    docs: {
     // container: CustomDocsContainer,
      source: {
        transformSource: (src, storyContext) => generateHtmlSnippet(storyContext.args),
      },
    },
  },
  argTypes: { 
    viewport: {
      control: { type: 'select' }, 
      options: ['Desktop', 'Mobile'],
      defaultValue: 'Desktop',
    },
    fontName: {
      control: { type: 'select' },
      options: ['body-sm', 'body-md', 'body-lg', 'body-xl'],  // Available font names
      defaultValue: 'body-xl',
    },
    modifier: {
      control: { type: 'select' },
      options: fontModifiers['body-xl'],  // Set initial options for body-xl
      defaultValue: 'body-xl--preamble',
    },
    marginBottom: {
      control: { type: 'select' },
      options: ['', 'space-16-small', 'space-24-small', 'space-32-large'],  // margin-bottom options
      defaultValue: '',
    },
  },
  decorators: [
    (Story, context) => {
      const { fontName } = context.args;
      const modifierControl = context.argTypes.modifier;

      useEffect(() => {
        // Dynamically update the options based on the selected fontName
        modifierControl.options = fontModifiers[fontName] || [''];
      }, [fontName]);  // Re-run when fontName changes

      return <Story {...context.args} />;
    },
  ],
  tags: ['autodocs'],
};

const summaryText = 'Swedol caters to the needs of professional users as a multispecialist. We provide high quality goods and services in a straightforward and professional manner.';

const Template = (args) => <BlockQuote {...args} />;

// Define different story variants
export const BodyXLarge = Template.bind({});
BodyXLarge.args = {
  summary: summaryText,
  fontName: 'body-xl',  // Default fontName for BodyXLarge
  marginBottom: '',
};

export const BodyLarge = Template.bind({});
BodyLarge.args = {
  ...BodyXLarge.args,
  fontName: 'body-lg',  // Default fontName for BodyLarge
};

export const BodyMedium = Template.bind({});
BodyMedium.args = {
  ...BodyXLarge.args,
  fontName: 'body-md',  // Default fontName for BodyMedium
};

export const BodySmall = Template.bind({});
BodySmall.args = {
  ...BodyXLarge.args,
  fontName: 'body-sm',  // Default fontName for BodySmall
};
